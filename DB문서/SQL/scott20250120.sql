SELECT EMPNO EMP_NO, ENAME EMP_NAME, SAL, SAL * 12 AS ANNUAL_SAL
FROM EMP;

SELECT *
FROM (  SELECT EMPNO EMP_NO, ENAME EMP_NAME, SAL, SAL * 12 AS ANNUAL_SAL
        FROM EMP);
        
SELECT *
FROM EMP;

SELECT *
FROM SALGRADE;

--1
SELECT *
FROM EMP E JOIN SALGRADE S
ON E.SAL BETWEEN S.LOSAL AND S.HISAL;

--2
SELECT DEPTNO
FROM EMP E JOIN SALGRADE S
ON E.SAL BETWEEN S.LOSAL AND S.HISAL
GROUP BY E.DEPTNO;

--3
SELECT NVL(E.DEPTNO, 40) AS DEPTNO
FROM EMP E JOIN SALGRADE S
ON E.SAL BETWEEN S.LOSAL AND S.HISAL
GROUP BY E.DEPTNO;

--4
--인라인 뷰 없이 구현
SELECT NVL(E.DEPTNO, 40) AS DEPTNO, MAX(S.GRADE), MAX(E.SAL)
FROM EMP E JOIN SALGRADE S
ON E.SAL BETWEEN S.LOSAL AND S.HISAL
GROUP BY E.DEPTNO
ORDER BY DEPTNO DESC;

--인라인 뷰 
--1
SELECT EMPNO, ENAME, NVL(DEPTNO, 40) DEPTNO, SAL
FROM EMP;

--2
SELECT *
FROM (  SELECT EMPNO, ENAME, NVL(DEPTNO, 40) DEPTNO, SAL
        FROM EMP) E 
JOIN SALGRADE S
ON E.SAL BETWEEN S.LOSAL AND S.HISAL;

--3
SELECT E.DEPTNO, MAX(S.GRADE), MAX(E.SAL)
FROM (  SELECT EMPNO, ENAME, NVL(DEPTNO, 40) DEPTNO, SAL
        FROM EMP) E 
JOIN SALGRADE S
ON E.SAL BETWEEN S.LOSAL AND S.HISAL
GROUP BY E.DEPTNO
ORDER BY E.DEPTNO DESC;



SELECT E.DEPTNO, MAX(S.GRADE) MAX_GRADE, MAX(E.SAL) MAX_SAL 
FROM (
    SELECT NVL(DEPTNO, 40) DEPTNO, SAL 
    FROM EMP
) E JOIN SALGRADE S 
ON E.SAL BETWEEN S.LOSAL AND S.HISAL
GROUP BY E.DEPTNO
ORDER BY DEPTNO DESC;



SELECT E.DEPTNO, MAX(S.GRADE) AS MAX_GRADE, MAX(E.SAL) AS MAX_SAL
FROM (
    SELECT NVL(DEPTNO, 40) AS DEPTNO, SAL 
    FROM EMP
) E JOIN SALGRADE S 
ON E.SAL BETWEEN S.LOSAL AND S.HISAL
GROUP BY E.DEPTNO
HAVING MAX(E.SAL) = (
    SELECT MAX(SAL)
    FROM EMP
);


SELECT NVL(E.DEPTNO, 40) AS DEPTNO, 
       MAX(S.GRADE) AS MAX_GRADE, 
       MAX(E.SAL) AS MAX_SAL
FROM EMP E JOIN SALGRADE S 
ON E.SAL >= S.LOSAL AND E.SAL <= S.HISAL
GROUP BY E.DEPTNO
HAVING MAX(E.SAL) = (   SELECT MAX(SAL) 
                        FROM EMP);
                        
                        
SELECT *
FROM EMP;

SELECT ROWNUM, ENAME, JOB, SAL
FROM EMP E;

SELECT ROWNUM, ENAME, JOB, SAL
FROM EMP E
WHERE ROWNUM <= 3;

SELECT ROWNUM, ENAME, JOB, SAL
FROM EMP E
WHERE ROWNUM >= 3;


SELECT ROWNUM, ENAME, JOB, SAL
FROM EMP E
WHERE ROWNUM <= 3
ORDER BY SAL DESC;


SELECT *
FROM EMP
ORDER BY SAL DESC;

SELECT ROWNUM 등수, E.ENAME, E.SAL
FROM (  SELECT *
        FROM EMP
        ORDER BY SAL DESC) E
WHERE ROWNUM <= 3;



--사원 중에 급여가 2등인 사원을 구하기


--페이징(PAGING)

-- 선수들 중에 몸무게가 20~30번 째로 많이 나가는 선수 구하기

--사원 중에서 급여가 4~7등인 사원 구하기
SELECT *
FROM EMP;

SELECT ROWNUM R_NUM, E.ENAME, E.JOB, E.SAL, E.DEPTNO
FROM (  SELECT ENAME, JOB, SAL, DEPTNO
        FROM EMP
        ORDER BY SAL DESC) E;

SELECT E.R_NUM, E.ENAME, E.JOB, E.SAL, E.DEPTNO
FROM (  SELECT ROWNUM R_NUM, E.ENAME, E.JOB, E.SAL, E.DEPTNO
        FROM (  
            SELECT ENAME, JOB, SAL, DEPTNO
            FROM EMP
            ORDER BY SAL DESC) E
    ) E
WHERE E.R_NUM >= 3
AND E.R_NUM <= 7;

SELECT E.R_NUM, E.ENAME, E.JOB, E.SAL, E.DEPTNO
FROM (  SELECT ROWNUM R_NUM, E.ENAME, E.JOB, E.SAL, E.DEPTNO
        FROM (  
            SELECT ENAME, JOB, SAL, DEPTNO
            FROM EMP
            ORDER BY SAL DESC) E
    ) E
WHERE E.R_NUM = 2;



SELECT P.TEAM_ID, T.TEAM_NAME, ROUND(SUM(P.HEIGHT)/COUNT(P.HEIGHT), 2) 평균키
FROM PLAYER P, TEAM T
WHERE P.TEAM_ID = T.TEAM_ID
GROUP BY P.TEAM_ID, T.TEAM_NAME
HAVING AVG(P.HEIGHT) < (SELECT AVG(HEIGHT)
                        FROM    PLAYER
                        WHERE TEAM_ID = 'K02');


SELECT D.DNAME, A.DEPTNO, A.EMP_COUNT, A.MAX_SAL
FROM (
    SELECT DEPTNO, COUNT(*) AS EMP_COUNT, MAX(SAL) AS MAX_SAL
    FROM EMP
    GROUP BY DEPTNO
) A
JOIN DEPT D ON A.DEPTNO = D.DEPTNO;

SELECT E.EMPNO, E.ENAME, E.SAL, E.DEPTNO, D.AVG_SAL
FROM EMP E JOIN (
    SELECT DEPTNO, AVG(SAL) AS AVG_SAL
    FROM EMP
    GROUP BY DEPTNO
) D
ON E.DEPTNO = D.DEPTNO
ORDER BY D.AVG_SAL;